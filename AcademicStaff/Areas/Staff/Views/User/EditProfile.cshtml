@model AcademicStaff.Models.Entities.Profile

@{
                /**/

                ViewBag.Title = "Edit Profile";
                Layout = "~/Views/Shared/_AreaLayout.cshtml";
}
<div class="row">
    <!-- left column -->
    <div class="col-md-2 col-sm-1"></div>
    <div class="col-md-8 col-xs-12 col-sm-10">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Edit Profile</h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }

                @if (TempData["success"] != null)
                {
                    <div class="alert alert-success alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["success"]
                    </div>
                }
            </div>

            @using (Html.BeginForm("EditProfile", "User", FormMethod.Post, new { @class = "", enctype = "multipart/form-data", area = "Staff" }))
            {
                @Html.AntiForgeryToken()
                <div class="box-footer">

                </div>
                <div class="box-body">
                    <div class="nav-tabs-custom">
                        <ul class="nav nav-tabs pull-right">

                            <li><a href="#tab_3-4" data-toggle="tab">Biography</a></li>
                            <li><a href="#tab_3-2" data-toggle="tab">Faculty</a></li>
                            <li><a href="#tab_2-2" data-toggle="tab">Contact Address</a></li>
                            <li class="active"><a href="#tab_1-1" data-toggle="tab">Personal Info</a></li>

                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1-1">



                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.StaffNo)
                                @Html.HiddenFor(model => model.UserId)
                                @Html.HiddenFor(model => model.Photo)
                                @Html.HiddenFor(model => model.CurrentAppDate)
                                @Html.HiddenFor(model => model.DepartmentId)
                                @Html.HiddenFor(model => model.LocalGov)


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "" })
                                    <div class="">
                                        <input type="file" name="picture" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OtherNames, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.OtherNames, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OtherNames, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EnumDropDownListFor(model => model.MaritalStatus, htmlAttributes: new { @class = "form-control" })

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })

                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Rank", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EnumDropDownListFor(model => model.Rank, htmlAttributes: new { @class = "form-control" })

                                    </div>
                                </div>
                            </div>


                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_2-2">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateOfOrigin, htmlAttributes: new { @class = "control-label" })
                                    <div class="">

                                        @Html.DropDownList("StateOfOrigin", ViewBag.StateName as SelectList, "Select a State", new { id = "StateOfOrigin", @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LocalGov, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        <select id="LGA" name="LocalGov" class="form-control"></select>
                                        @Html.ValidationMessageFor(model => model.LocalGov, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_3-2">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label" })
                                    <div class="">

                                        @Html.DropDownList("SchoolId", ViewBag.School as SelectList, "Select a School", new { id = "SchoolId", @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        <select id="Dept" name="DepartmentId" class="form-control"></select>
                                        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="tab_3-4">
                                <div class="form-group">
                                    <div class="">
                                        <textarea class="textarea" placeholder="Biography" name="Biography" id="mytextarea" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"> @Html.Raw(Model.Biography) </textarea>

                                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <!-- /.tab-pane -->

                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>
            }

        </div>

    </div>
    <div class="col-md-2 col-sm-1"></div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/jscript">
        $(function () {
            $('#StateOfOrigin').change(function () {
                $.getJSON('/User/LgaList/' + $('#StateOfOrigin').val(), function (data) {
                    var items = '<option>Select a Local Government</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    $('#LGA').html(items);
                });
            });
        });
    </script>


    <script type="text/jscript">
        $(function () {
            $('#SchoolId').change(function () {
                $.getJSON('/User/DeptList/' + $('#SchoolId').val(), function (data) {
                    var items = '<option>Select a Department</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    $('#Dept').html(items);
                    console.log(items);
                    console.log("check 2");
                });
            });
        });
    </script>


}


@section Style {

    <link rel="stylesheet" href="~/Content/AdminLTE/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css">
}

@section Scripts2 {
    <!-- DataTables -->
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Content/AdminLTE/bower_components/ckeditor/ckeditor.js"></script>
    <!-- Bootstrap WYSIHTML5 -->
    <script src="~/Content/AdminLTE/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>

    <script src="~/Content/AdminLTE/tinymce/tinymce.min.js"></script>
    @*<script src='https://cloud.tinymce.com/stable/tinymce.min.js'></script>*@
    <script>
        //tinymce.init({
        //    selector: '#mytextarea'
        //});


        tinymce.init({
            selector: 'textarea',
            height: 500,
            theme: 'modern',
            plugins: [
                'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                'searchreplace wordcount visualblocks visualchars code fullscreen',
                'insertdatetime media nonbreaking save table contextmenu directionality',
                'emoticons template paste textcolor colorpicker textpattern imagetools codesample'
            ],
            toolbar1: 'insertfile undo redo | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            toolbar2: 'print preview media | forecolor backcolor emoticons | codesample',
            image_advtab: true,
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
                'css?family=Lato:300,300i,400,400i',
                'css/codepen.min.css'
            ]
        });
    </script>

    <script>
        //Date picker
        $('#datepicker').datepicker({
            autoclose: true
        })
    </script>
    <script>
        //Date picker
        $('#datepicker2').datepicker({
            autoclose: true
        })
    </script>

}


